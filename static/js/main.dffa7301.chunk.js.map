{"version":3,"sources":["Components/Header.tsx","api.ts","utils.ts","Routes/Home.tsx","Routes/Search.tsx","Routes/Tv.tsx","App.tsx","index.tsx","theme.ts"],"names":["Nav","styled","motion","nav","Col","div","Logo","svg","props","theme","red","Items","ul","Item","li","white","darker","lighter","Search","form","Circle","span","Input","input","logoVariants","normal","fillOpacity","active","transition","repeat","Infinity","navVariants","top","backgroundColor","scroll","Header","useState","searchOpen","setSearchOpen","homeMatch","useRouteMatch","tvMatch","inputAnimation","useAnimation","navAnimation","scrollY","useViewportScroll","useEffect","onChange","get","start","history","useHistory","useForm","register","handleSubmit","variants","animate","initial","whileHover","xmlns","width","height","viewBox","path","d","to","isExact","layoutId","onSubmit","data","push","keyword","onClick","scaleX","prev","x","type","fill","fillRule","clipRule","required","minLength","placeholder","API_KEY","BASE_PATH","getMovies","fetch","then","response","json","getMoviesLatest","getMoviesTop","getMoviesUpcoming","getTvLatest","getTvToday","getTvPopular","getTvTop","getSearchMovie","URLSearchParams","window","location","search","makeImagePath","id","format","Wrapper","Loader","Banner","bgPhoto","Title","h2","Overview","p","Slider","Row","Box","Info","black","Overlay","BigMovie","BigCover","BigTitle","h3","BigOverview","rowVariants","hidden","outerWidth","visible","exit","boxVariants","scale","hover","y","delay","duaration","infoVariants","opacity","Home","bigMovieMatch","useQuery","moviesData","moviesLoading","isLoading","latestData","topData","upcomingData","console","log","index","setIndex","leaving","setLeaving","toggleLeaving","onBoxClicked","movieId","clickedMovie","params","results","find","movie","totalMovies","length","maxIndex","Math","floor","backdrop_path","title","overview","AnimatePresence","onExitComplete","duration","slice","map","style","poster_path","backgroundImage","BigTv","useLocation","keywordS","lastIndexOf","bigTvMatch","movieData","movieLoading","clickedTv","searchId","tv","margin","fontSize","display","justifyContent","alignItems","padding","totalTvs","border","borderRadius","Tv","latestLoading","todayData","popularData","tvId","name","App","GlobalStyle","createGlobalStyle","client","QueryClient","ReactDOM","render","StrictMode","veryDark","document","getElementById"],"mappings":"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","file":"static/js/main.dffa7301.chunk.js","sourcesContent":["import { Link, useRouteMatch, useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { motion, useAnimation, useViewportScroll } from \"framer-motion\";\nimport { useEffect, useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\n\nconst Nav = styled(motion.nav)`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  font-size: 14px;\n  padding: 20px 60px;\n  color: white;\n`;\n\nconst Col = styled.div`\n  display: flex;\n  align-items: center;\n`;\n\nconst Logo = styled(motion.svg)`\n  margin-right: 50px;\n  width: 95px;\n  height: 25px;\n  fill: ${(props) => props.theme.red};\n  path {\n    stroke-width: 6px;\n    stroke: white;\n  }\n`;\n\nconst Items = styled.ul`\n  display: flex;\n  align-items: center;\n`;\n\nconst Item = styled.li`\n  margin-right: 20px;\n  color: ${(props) => props.theme.white.darker};\n  transition: color 0.3s ease-in-out;\n  position: relative;\n  display: flex;\n  justify-content: center;\n  flex-direction: column;\n  &:hover {\n    color: ${(props) => props.theme.white.lighter};\n  }\n`;\n\nconst Search = styled.form`\n  color: white;\n  display: flex;\n  align-items: center;\n  position: relative;\n  svg {\n    height: 25px;\n  }\n`;\n\nconst Circle = styled(motion.span)`\n  position: absolute;\n  width: 5px;\n  height: 5px;\n  border-radius: 2.5px;\n  bottom: -5px;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  background-color: ${(props) => props.theme.red};\n`;\n\nconst Input = styled(motion.input)`\n  transform-origin: right center;\n  position: absolute;\n  right: 0px;\n  padding: 5px 10px;\n  padding-left: 40px;\n  z-index: -1;\n  color: white;\n  font-size: 16px;\n  background-color: transparent;\n  border: 1px solid ${(props) => props.theme.white.lighter};\n`;\n\nconst logoVariants = {\n  normal: {\n    fillOpacity: 1,\n  },\n  active: {\n    fillOpacity: [0, 1, 0],\n    transition: {\n      repeat: Infinity,\n    },\n  },\n};\n\nconst navVariants = {\n  top: {\n    backgroundColor: \"rgba(0, 0, 0, 0)\",\n  },\n  scroll: {\n    backgroundColor: \"rgba(0, 0, 0, 1)\",\n  },\n};\n\ninterface IForm {\n  keyword: string;\n}\n\nfunction Header() {\n  const [searchOpen, setSearchOpen] = useState(false);\n  const homeMatch = useRouteMatch(\"/\");\n  const tvMatch = useRouteMatch(\"/tv\");\n  const inputAnimation = useAnimation();\n  const navAnimation = useAnimation();\n  const { scrollY } = useViewportScroll();\n  const toggleSearch = () => {\n    if (searchOpen) {\n      inputAnimation.start({\n        scaleX: 0,\n      });\n    } else {\n      inputAnimation.start({ scaleX: 1 });\n    }\n    setSearchOpen((prev) => !prev);\n  };\n  useEffect(() => {\n    scrollY.onChange(() => {\n      if (scrollY.get() > 80) {\n        navAnimation.start(\"scroll\");\n      } else {\n        navAnimation.start(\"top\");\n      }\n    });\n  }, [scrollY, navAnimation]);\n  const history = useHistory();\n  const { register, handleSubmit } = useForm<IForm>();\n  const onValid = (data: IForm) => {\n    history.push(`/search?keyword=${data.keyword}`);\n  };\n  return (\n    <Nav variants={navVariants} animate={navAnimation} initial={\"top\"}>\n      <Col>\n        <Logo\n          variants={logoVariants}\n          whileHover=\"active\"\n          animate=\"normal\"\n          xmlns=\"http://www.w3.org/2000/svg\"\n          width=\"1024\"\n          height=\"276.742\"\n          viewBox=\"0 0 1024 276.742\"\n        >\n          <motion.path d=\"M140.803 258.904c-15.404 2.705-31.079 3.516-47.294 5.676l-49.458-144.856v151.073c-15.404 1.621-29.457 3.783-44.051 5.945v-276.742h41.08l56.212 157.021v-157.021h43.511v258.904zm85.131-157.558c16.757 0 42.431-.811 57.835-.811v43.24c-19.189 0-41.619 0-57.835.811v64.322c25.405-1.621 50.809-3.785 76.482-4.596v41.617l-119.724 9.461v-255.39h119.724v43.241h-76.482v58.105zm237.284-58.104h-44.862v198.908c-14.594 0-29.188 0-43.239.539v-199.447h-44.862v-43.242h132.965l-.002 43.242zm70.266 55.132h59.187v43.24h-59.187v98.104h-42.433v-239.718h120.808v43.241h-78.375v55.133zm148.641 103.507c24.594.539 49.456 2.434 73.51 3.783v42.701c-38.646-2.434-77.293-4.863-116.75-5.676v-242.689h43.24v201.881zm109.994 49.457c13.783.812 28.377 1.623 42.43 3.242v-254.58h-42.43v251.338zm231.881-251.338l-54.863 131.615 54.863 145.127c-16.217-2.162-32.432-5.135-48.648-7.838l-31.078-79.994-31.617 73.51c-15.678-2.705-30.812-3.516-46.484-5.678l55.672-126.75-50.269-129.992h46.482l28.377 72.699 30.27-72.699h47.295z\" />\n        </Logo>\n        <Items>\n          <Item>\n            <Link to=\"/\">\n              Home {homeMatch?.isExact && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n          <Item>\n            <Link to=\"/tv\">\n              Tv Shows {tvMatch && <Circle layoutId=\"circle\" />}\n            </Link>\n          </Item>\n        </Items>\n      </Col>\n      <Col>\n        <Search onSubmit={handleSubmit(onValid)}>\n          <motion.svg\n            onClick={toggleSearch}\n            animate={{ x: searchOpen ? -185 : 0 }}\n            transition={{ type: \"linear\" }}\n            fill=\"currentColor\"\n            viewBox=\"0 0 20 20\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path\n              fillRule=\"evenodd\"\n              d=\"M8 4a4 4 0 100 8 4 4 0 000-8zM2 8a6 6 0 1110.89 3.476l4.817 4.817a1 1 0 01-1.414 1.414l-4.816-4.816A6 6 0 012 8z\"\n              clipRule=\"evenodd\"\n            ></path>\n          </motion.svg>\n          <Input\n            {...register(\"keyword\", { required: true, minLength: 2 })}\n            animate={inputAnimation}\n            initial={{ scaleX: 0 }}\n            transition={{ type: \"linear\" }}\n            placeholder=\"Search for movie or tv show...\"\n          />\n        </Search>\n      </Col>\n    </Nav>\n  );\n}\n\nexport default Header;\n","const API_KEY = \"4de9f22b35bd87922db9fa7e7348fb77\";\nconst BASE_PATH = \"https://api.themoviedb.org/3\";\n\ninterface IMovie {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\nexport interface IGetMoviesResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\nexport interface IGetMoviesLatestResult {\n  id: number;\n  overview: string;\n  poster_path: string;\n  runtime: number;\n  status: string;\n  title: string;\n}\n\n\ninterface ITv {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  name: string;\n  overview: string;\n}\nexport interface IGetTvResult {\n  dates: {\n    maximum: string;\n    minimum: string;\n  };\n  page: number;\n  results: ITv[];\n  total_pages: number;\n  total_results: number;\n}\nexport interface IGetTvLatestResult {\n  id: number;\n  backdrop_path: string;\n  first_air_date:string;\n  last_air_date: string;\n  name: string;\n  overview: string;\n  poster_path: string;\n  type: string;\n}\n\ninterface ISearch {\n  id: number;\n  backdrop_path: string;\n  poster_path: string;\n  title: string;\n  overview: string;\n}\nexport interface IGetSearchMovies {\n  page: number;\n  results: IMovie[];\n  total_pages: number;\n  total_results: number;\n}\n\nexport function getMovies() {\n  return fetch(`${BASE_PATH}/movie/now_playing?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getMoviesLatest(){\n  return fetch(`${BASE_PATH}/movie/latest?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getMoviesTop(){\n  return fetch(`${BASE_PATH}/movie/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getMoviesUpcoming(){\n  return fetch(`${BASE_PATH}/movie/upcoming?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\n\nexport function getTvLatest(){\n  return fetch(`${BASE_PATH}/tv/latest?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvToday(){\n  return fetch(`${BASE_PATH}/tv/airing_today?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvPopular(){\n  return fetch(`${BASE_PATH}/tv/popular?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\nexport function getTvTop(){\n  return fetch(`${BASE_PATH}/tv/top_rated?api_key=${API_KEY}`).then(\n    (response) => response.json()\n  );\n}\n\nexport function getSearchMovie(){\n  const search = new URLSearchParams(window.location.search)\n  const keyword = search.get(\"keyword\")\n  \n  return fetch(`${BASE_PATH}/search/multi?api_key=${API_KEY}&query=${keyword}`).then(\n    (response) => response.json()\n  );\n}","export function makeImagePath(id: string, format?: string) {\n  return `https://image.tmdb.org/t/p/${format ? format : \"original\"}/${id}`;\n}\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getMovies, getMoviesLatest, getMoviesTop, getMoviesUpcoming, IGetMoviesLatestResult, IGetMoviesResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigMovie = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Home() {\n  const history = useHistory();\n  const bigMovieMatch = useRouteMatch<{ movieId: string }>(\"/movies/:movieId\");\n  const { scrollY } = useViewportScroll();\n  const { data:moviesData, isLoading:moviesLoading } = useQuery<IGetMoviesResult>(\n    [\"movies\", \"nowPlaying\"],\n    getMovies\n  );\n  const { data:latestData, isLoading:latestLoading } = useQuery<IGetMoviesLatestResult>(\n    [\"movies\", \"latest\"],\n    getMoviesLatest\n  );\n  const { data:topData, isLoading:topLoading } = useQuery<IGetMoviesResult>(\n    [\"movies\", \"topRated\"],\n    getMoviesTop\n  );\n  const { data:upcomingData, isLoading:upcomingLoading } = useQuery<IGetMoviesResult>(\n    [\"movies\", \"upcoming\"],\n    getMoviesUpcoming\n  );\n  console.log(getMoviesTop());\n  \n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (moviesData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalMovies = moviesData.results.length - 1;\n      const maxIndex = Math.floor(totalMovies / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (movieId: number) => {\n    history.push(`/movies/${movieId}`);\n  };\n  const onOverlayClick = () => history.push(\"/\");\n  const clickedMovie =\n    bigMovieMatch?.params.movieId &&\n    moviesData?.results.find((movie) => movie.id === +bigMovieMatch.params.movieId);\n  return (\n    <Wrapper>\n      {moviesLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={incraseIndex}\n            bgPhoto={makeImagePath(moviesData?.results[0].backdrop_path || \"\")}\n          >\n            <Title>{moviesData?.results[0].title}</Title>\n            <Overview>{moviesData?.results[0].overview}</Overview>\n          </Banner>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {moviesData?.results\n                  .slice(1)\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Slider style={{top: \"200px\"}}>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {latestData ?\n                    <Box\n                      layoutId={latestData.id + \"\"}\n                      key={latestData.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(latestData.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(latestData.poster_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{latestData.title}</h4>\n                      </Info>\n                    </Box>\n                : null }\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Slider style={{top: \"500px\"}}>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {topData?.results\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Slider style={{top: \"800px\"}}>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {upcomingData?.results\n                  .slice(offset * index, offset * index + offset)\n                  .map((movie) => (\n                    <Box\n                      layoutId={movie.id + \"\"}\n                      key={movie.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(movie.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(movie.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{movie.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {bigMovieMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigMovie\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigMovieMatch.params.movieId}\n                >\n                  {clickedMovie && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedMovie.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedMovie.title}</BigTitle>\n                      <BigOverview>{clickedMovie.overview}</BigOverview>\n                    </>\n                  )}\n                </BigMovie>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n    </Wrapper>\n  );\n}\nexport default Home;\n","import { useLocation } from \"react-router\";\nimport { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getSearchMovie, IGetSearchMovies } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: 0;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigTv = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Search() {\n  const location = useLocation();\n  const keyword = new URLSearchParams(location.search).get(\"keyword\");\n  let keywordS = keyword?.slice(0, keyword.lastIndexOf('/'))\n  \n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ searchId: string }>(`/search/pop/:searchId`);\n  const { scrollY } = useViewportScroll();\n  console.log(getSearchMovie());\n  \n  const { data:movieData, isLoading:movieLoading } = useQuery<IGetSearchMovies>(\n    [\"search\", \"movies\"],\n    getSearchMovie\n  );\n  \n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (movieData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = movieData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (searchId: number) => {\n    history.push(`/search/pop/${searchId}`);\n  };\n  const onOverlayClick = () => history.push(`/search/${location.search}`);\n  console.log(bigTvMatch, keywordS);\n  \n  const clickedTv =\n    bigTvMatch?.params.searchId &&\n    movieData?.results.find((tv) => tv.id === +bigTvMatch.params.searchId);\n\n\n  return (\n    <Wrapper>\n    {movieLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <div style={{ margin: \"60px auto 20px auto\" }}>\n            <h2 style={{ fontSize: \"48px\" }}>search result</h2>\n          </div>\n          <Slider>\n            <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems:\"center\", padding: \"20px 10px\" }}><button onClick={incraseIndex} style={{ backgroundColor: \"#E51013\", border: \"none\", width: \" 60px\", height: \"40px\", borderRadius: \"6px\" }}>next</button></div>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {movieData?.results\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.title}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {bigTvMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigTv\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigTvMatch.params.searchId}\n                >\n                  {clickedTv && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedTv.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedTv.title}</BigTitle>\n                      <BigOverview>{clickedTv.overview}</BigOverview>\n                    </>\n                  )}\n                </BigTv>\n              </>\n            ) : <>kkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkkk</>}\n          </AnimatePresence>\n        </>\n      )}\n      </Wrapper>\n  );\n}\nexport default Search;\n","import { useQuery } from \"react-query\";\nimport styled from \"styled-components\";\nimport { motion, AnimatePresence, useViewportScroll } from \"framer-motion\";\nimport { getTvLatest, getTvPopular, getTvToday, getTvTop, IGetTvLatestResult, IGetTvResult } from \"../api\";\nimport { makeImagePath } from \"../utils\";\nimport { useState } from \"react\";\nimport { useHistory, useRouteMatch } from \"react-router-dom\";\n\nconst Wrapper = styled.div`\n  background: black;\n  padding-bottom: 200px;\n`;\n\nconst Loader = styled.div`\n  height: 20vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Banner = styled.div<{ bgPhoto: string }>`\n  height: 100vh;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  padding: 60px;\n  background-image: linear-gradient(rgba(0, 0, 0, 0), rgba(0, 0, 0, 1)),\n    url(${(props) => props.bgPhoto});\n  background-size: cover;\n`;\n\nconst Title = styled.h2`\n  font-size: 68px;\n  margin-bottom: 20px; ;\n`;\n\nconst Overview = styled.p`\n  font-size: 30px;\n  width: 50%;\n`;\n\nconst Slider = styled.div`\n  position: relative;\n  top: -100px;\n`;\n\nconst Row = styled(motion.div)`\n  display: grid;\n  gap: 5px;\n  grid-template-columns: repeat(6, 1fr);\n  position: absolute;\n  width: 100%;\n`;\n\nconst Box = styled(motion.div)<{ bgPhoto: string }>`\n  background-color: white;\n  background-image: url(${(props) => props.bgPhoto});\n  background-size: cover;\n  background-position: center center;\n  height: 200px;\n  font-size: 66px;\n  cursor: pointer;\n  &:first-child {\n    transform-origin: center left;\n  }\n  &:last-child {\n    transform-origin: center right;\n  }\n`;\n\nconst Info = styled(motion.div)`\n  padding: 10px;\n  background-color: ${(props) => props.theme.black.lighter};\n  opacity: 0;\n  position: absolute;\n  width: 100%;\n  bottom: 0;\n  h4 {\n    text-align: center;\n    font-size: 18px;\n  }\n`;\n\nconst Overlay = styled(motion.div)`\n  position: fixed;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n`;\n\nconst BigTv = styled(motion.div)`\n  position: absolute;\n  width: 40vw;\n  height: 80vh;\n  left: 0;\n  right: 0;\n  margin: 0 auto;\n  border-radius: 15px;\n  overflow: hidden;\n  background-color: ${(props) => props.theme.black.lighter};\n`;\n\nconst BigCover = styled.div`\n  width: 100%;\n  background-size: cover;\n  background-position: center center;\n  height: 400px;\n`;\n\nconst BigTitle = styled.h3`\n  color: ${(props) => props.theme.white.lighter};\n  padding: 20px;\n  font-size: 46px;\n  position: relative;\n  top: -80px;\n`;\n\nconst BigOverview = styled.p`\n  padding: 20px;\n  position: relative;\n  top: -80px;\n  color: ${(props) => props.theme.white.lighter};\n`;\n\nconst rowVariants = {\n  hidden: {\n    x: window.outerWidth + 5,\n  },\n  visible: {\n    x: 0,\n  },\n  exit: {\n    x: -window.outerWidth - 5,\n  },\n};\n\nconst boxVariants = {\n  normal: {\n    scale: 1,\n  },\n  hover: {\n    scale: 1.3,\n    y: -80,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst infoVariants = {\n  hover: {\n    opacity: 1,\n    transition: {\n      delay: 0.5,\n      duaration: 0.1,\n      type: \"tween\",\n    },\n  },\n};\n\nconst offset = 6;\n\nfunction Tv() {\n  const history = useHistory();\n  const bigTvMatch = useRouteMatch<{ tvId: string }>(\"/tv/:tvId\");\n  const { scrollY } = useViewportScroll();\n  console.log(getTvPopular());\n  \n  const { data:latestData, isLoading:latestLoading } = useQuery<IGetTvLatestResult>(\n    [\"tv\", \"latest\"],\n    getTvLatest\n  );\n  const { data:todayData, isLoading: todayLoading } = useQuery<IGetTvResult>(\n    [\"tv\", \"today\"],\n    getTvToday\n  );\n  const { data:popularData, isLoading: popularLoading } = useQuery<IGetTvResult>(\n    [\"tv\", \"popular\"],\n    getTvPopular\n  );\n  const { data:topData, isLoading: topLoading } = useQuery<IGetTvResult>(\n    [\"tv\", \"topRate\"],\n    getTvTop\n  );\n  \n  const [index, setIndex] = useState(0);\n  const [leaving, setLeaving] = useState(false);\n  const incraseIndex = () => {\n    if (todayData) {\n      if (leaving) return;\n      toggleLeaving();\n      const totalTvs = todayData.results.length - 1;\n      const maxIndex = Math.floor(totalTvs / offset) - 1;\n      setIndex((prev) => (prev === maxIndex ? 0 : prev + 1));\n    }\n  };\n  const toggleLeaving = () => setLeaving((prev) => !prev);\n  const onBoxClicked = (tvId: number) => {\n    history.push(`/tv/${tvId}`);\n  };\n  const onOverlayClick = () => history.push(\"/tv\");\n  const clickedTv =\n    bigTvMatch?.params.tvId &&\n    todayData?.results.find((tv) => tv.id === +bigTvMatch.params.tvId);\n\n  return (\n     <Wrapper>\n    {latestLoading ? (\n        <Loader>Loading...</Loader>\n      ) : (\n        <>\n          <Banner\n            onClick={incraseIndex}\n            bgPhoto={makeImagePath(latestData?.poster_path || \"\")}\n          >\n            <Title>{latestData?.name}</Title>\n            <Overview>{latestData?.overview}</Overview>\n          </Banner>\n          <Slider>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {todayData?.results\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Slider style={{top: \"200px\"}}>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {popularData?.results\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <Slider style={{top: \"500px\"}}>\n            <AnimatePresence initial={false} onExitComplete={toggleLeaving}>\n              <Row\n                variants={rowVariants}\n                initial=\"hidden\"\n                animate=\"visible\"\n                exit=\"exit\"\n                transition={{ type: \"tween\", duration: 1 }}\n                key={index}\n              >\n                {topData?.results\n                  .slice(offset * index, offset * index + offset)\n                  .map((tv) => (\n                    <Box\n                      layoutId={tv.id + \"\"}\n                      key={tv.id}\n                      whileHover=\"hover\"\n                      initial=\"normal\"\n                      variants={boxVariants}\n                      onClick={() => onBoxClicked(tv.id)}\n                      transition={{ type: \"tween\" }}\n                      bgPhoto={makeImagePath(tv.backdrop_path, \"w500\")}\n                    >\n                      <Info variants={infoVariants}>\n                        <h4>{tv.name}</h4>\n                      </Info>\n                    </Box>\n                  ))}\n              </Row>\n            </AnimatePresence>\n          </Slider>\n          <AnimatePresence>\n            {bigTvMatch ? (\n              <>\n                <Overlay\n                  onClick={onOverlayClick}\n                  exit={{ opacity: 0 }}\n                  animate={{ opacity: 1 }}\n                />\n                <BigTv\n                  style={{ top: scrollY.get() + 100 }}\n                  layoutId={bigTvMatch.params.tvId}\n                >\n                  {clickedTv && (\n                    <>\n                      <BigCover\n                        style={{\n                          backgroundImage: `linear-gradient(to top, black, transparent), url(${makeImagePath(\n                            clickedTv.backdrop_path,\n                            \"w500\"\n                          )})`,\n                        }}\n                      />\n                      <BigTitle>{clickedTv.name}</BigTitle>\n                      <BigOverview>{clickedTv.overview}</BigOverview>\n                    </>\n                  )}\n                </BigTv>\n              </>\n            ) : null}\n          </AnimatePresence>\n        </>\n      )}\n      </Wrapper>\n  );\n}\nexport default Tv;\n","import { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Header from \"./Components/Header\";\nimport Home from \"./Routes/Home\";\nimport Search from \"./Routes/Search\";\nimport Tv from \"./Routes/Tv\";\n\nfunction App() {\n  return (\n    <Router>\n      <Header />\n      <Switch>\n        <Route path=\"/tv\">\n          <Tv />\n        </Route>\n        <Route path=\"/search\">\n          <Search />\n        </Route>\n        <Route path={[\"/\", \"/movies/:movieId\"]}>\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { RecoilRoot } from \"recoil\";\nimport { ThemeProvider } from \"styled-components\";\nimport App from \"./App\";\nimport { createGlobalStyle } from \"styled-components\";\nimport { QueryClient, QueryClientProvider } from \"react-query\";\nimport { theme } from \"./theme\";\n\nconst GlobalStyle = createGlobalStyle`\n@import url('https://fonts.googleapis.com/css2?family=Source+Sans+Pro:wght@300;400&display=swap');\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, menu, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed,\nfigure, figcaption, footer, header, hgroup,\nmain, menu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n  margin: 0;\n  padding: 0;\n  border: 0;\n  font-size: 100%;\n  font: inherit;\n  vertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure,\nfooter, header, hgroup, main, menu, nav, section {\n  display: block;\n}\n/* HTML5 hidden-attribute fix for newer browsers */\n*[hidden] {\n    display: none;\n}\nbody {\n  line-height: 1;\n}\nmenu, ol, ul {\n  list-style: none;\n}\nblockquote, q {\n  quotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n  content: '';\n  content: none;\n}\ntable {\n  border-collapse: collapse;\n  border-spacing: 0;\n}\n* {\n  box-sizing: border-box;\n}\nbody {\n  font-weight: 300;\n  font-family: 'Source Sans Pro', sans-serif;\n  color:${(props) => props.theme.white.darker};\n  line-height: 1.2;\n  background-color: black;\n}\na {\n  text-decoration:none;\n  color:inherit;\n}\n`;\n\nconst client = new QueryClient();\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <QueryClientProvider client={client}>\n        <ThemeProvider theme={theme}>\n          <GlobalStyle />\n          <App />\n        </ThemeProvider>\n      </QueryClientProvider>\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","import { DefaultTheme } from \"styled-components\";\n\nexport const theme: DefaultTheme = {\n  red: \"#E51013\",\n  black: {\n    veryDark: \"#141414\",\n    darker: \"#181818\",\n    lighter: \"#2F2F2F\",\n  },\n  white: {\n    lighter: \"#fff\",\n    darker: \"#e5e5e5\",\n  },\n};\n"],"sourceRoot":""}